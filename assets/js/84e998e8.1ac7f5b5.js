"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[492],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=a.createContext({}),l=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(d.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,d=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),s=l(r),m=o,b=s["".concat(d,".").concat(m)]||s[m]||p[m]||n;return r?a.createElement(b,i(i({ref:t},c),{},{components:r})):a.createElement(b,i({ref:t},c))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=m;var u={};for(var d in t)hasOwnProperty.call(t,d)&&(u[d]=t[d]);u.originalType=e,u[s]="string"==typeof e?e:o,i[1]=u;for(var l=2;l<n;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9090:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>u,toc:()=>l});var a=r(7462),o=(r(7294),r(3905));const n={title:"Introduction",sidebar_position:1,slug:"/atmega32u4_breakout/introduction",keywords:["atmega32u4","breadboard","prototyping","oshw","hardware","kicad","debugging","avr"],description:"Introduction and Overview of the atmega32u4 breakout board by everyday\u26a1dev"},i=void 0,u={unversionedId:"hardware/atmega32u4-breakout/introduction",id:"hardware/atmega32u4-breakout/introduction",title:"Introduction",description:"Introduction and Overview of the atmega32u4 breakout board by everyday\u26a1dev",source:"@site/docs/hardware/atmega32u4-breakout/introduction.mdx",sourceDirName:"hardware/atmega32u4-breakout",slug:"/atmega32u4_breakout/introduction",permalink:"/docs/atmega32u4_breakout/introduction",draft:!1,editUrl:"https://github.com/everyday-dev/opensource/tree/main/docs/hardware/atmega32u4-breakout/introduction.mdx",tags:[],version:"current",lastUpdatedBy:"stephendpmurphy",lastUpdatedAt:1686580849,formattedLastUpdatedAt:"Jun 12, 2023",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1,slug:"/atmega32u4_breakout/introduction",keywords:["atmega32u4","breadboard","prototyping","oshw","hardware","kicad","debugging","avr"],description:"Introduction and Overview of the atmega32u4 breakout board by everyday\u26a1dev"},sidebar:"sidebar",previous:{title:"atmega32u4 breakout",permalink:"/docs/atmega32u4_breakout"},next:{title:"Pinout",permalink:"/docs/atmega32u4_breakout/hardware-overview"}},d={},l=[],c={toc:l},s="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"atmega32u4 breakout board inserted into a breadboard, driving an OLED display via SPI",src:r(8453).Z,width:"4029",height:"2266"})),(0,o.kt)("p",null,"The ATmega32u4 breakout board makes it easy to get up and going with an AVR Microcontroller and utilize IO features such as ADCs, SPI, TWI, UART, and a Full-Speed USB interface.\nStandard pitch spacing on the headers allow it to be inserted into a breadboard and used for prototyping or through-hole soldered down onto a larger project/carrier board. A summary of the breakout board IO\nis as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"26x GPIO (Several of the GPIO have an alternate function shared with the peripherals described below)"),(0,o.kt)("li",{parentName:"ul"},"12x 10-bit ADC inputs"),(0,o.kt)("li",{parentName:"ul"},"1x USART"),(0,o.kt)("li",{parentName:"ul"},"1x TWI (i2c)"),(0,o.kt)("li",{parentName:"ul"},"1x SPI"),(0,o.kt)("li",{parentName:"ul"},"1x Status LED"),(0,o.kt)("li",{parentName:"ul"},"1x 5V Power LED"),(0,o.kt)("li",{parentName:"ul"},"1x 3.3V Power LED"),(0,o.kt)("li",{parentName:"ul"},"1x AVR-SPI Programming header"),(0,o.kt)("li",{parentName:"ul"},"1x USB Full-Speed interface via USB Type C connector")),(0,o.kt)("p",null,"You can choose a couple different paths when writing applications for this board (bare-metal or Arduino) and multiple options for programming the board (AVR-SPI, JTAG or USB DFU).\nWe have guides for it all here in the docs!"),(0,o.kt)("a",{href:"https://certification.oshwa.org/us002160.html",target:"_blank"},(0,o.kt)("img",{height:"125",width:"125",style:{float:"right"},src:"/img/oshw_cert_atmega32u4_breakout.svg"})),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If you need to debug the board, build your own PCB or just understand the design better - you can find the design files, latest release gerbers, BOM,\nschematic and 3d STEP model ",(0,o.kt)("a",{href:"https://www.github.com/everyday-dev/atmega32u4_breakout",target:"_blank"},"on Github"),".")))}p.isMDXComponent=!0},8453:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/atmega32u4_breakout-94e8a0baeea9f408d3183b9208f9755f.jpg"}}]);